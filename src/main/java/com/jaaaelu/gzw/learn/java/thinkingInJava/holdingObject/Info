第十章 持有对象

1.Map 允许我们使用另一个对象来查找某个对象，它也被称为"关联数组"，因为它将某些对象与另外一些对象关联在了一起；或者也被称为"字典"。
2.有两种类型的 List：
 - 基本的 ArrayList，它长于随机访问元素，但是在 List 的中间插入或一出元素是较慢。
 - LinkedList，它通过代价较低的在 List 中间进行插入和删除操作，提供了优化的顺序访问。LinkedList 在随机访问方面相对比较慢，但是它的特性集
 较 ArrayList 更大。
3.在迭代器遍历过程中，无法使用 list 的 remove 方法，需要使用迭代器的 remove 方法。
4.Iterator 只能向前移动，而 ListIterator 可以双向移动，此外 ListIterator 还可以进行添加和修改。
5."栈"通常是指"后进先出"（LIFO）的容器。又是栈也被成为叠加栈，因为最后"压入"栈的阿运输，第一个"弹出"栈。
6.Set 不保存重复元素（至于如何判断元素相同则较为复杂，自己定义的类需要自己进行判断）。而日常中使用的 HashSet，专门对快速查找进行了优化。
7."队列"是一种典型的"先进先出"（FIFO）容器。既从容器的一端放入事物，从另一端取出。并且事物放入容器的顺序与取出的顺序是相同的。
8.优先队列声明下一个弹出元素的是最重要的元素（具有最高优先级，有时候可能需要自己指定优先级）。
9.foreach 语句可以用于数组或其他任何 Iterable，但这并不意味这数组肯定也是一个 Iterable。
10.Java 提供了大量持有对象的方式：
 - 数组将数字与对象联系起来。
 - Collection 保存单一元素，而 Map 保存相关联的键值对。
 - Set 不接受重复元素。HashSet 提供了最快的查询速度，而 TreeSet保持元素出于排序状态。LinkedHashSet 以插入顺序保存元素。
 - Map 是一种将对象（而非数字）与对象关联的设计。HashMap 设计用来快速访问。而 TreeMap 保持"键"始终处于排序状态，所以没有 HashMap 快。而
 LinkedHashMap 保持元素插入的顺序，但是也是通过散列提供了快速访问的能力。
 - List 就是可以自动扩容的数组。
