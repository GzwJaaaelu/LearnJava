第十八章 Java I/O 系统

1.File 类不仅只代表存在的文件或目录。也可以用 File 对象来创建新的目录或上不存在的整个目录路径。
2.Input 用于读取，Output 用于写入。
3.我们很少使用单一的类来创建流对象，而是通过叠加多个对象来提供所期望的功能（装饰着设计模式）。
而 Java 中"流"类库让人迷惑的主要原因就在于：创建单一的结果流，却需要创建多个对象。
4.InputStream 的作用是用来表示那些从不同数据源产生输入的类。
InputStream 类型：
 - ByteArrayInputStream：允许将内存的缓冲区当作 InputStream 使用。
 - StringBufferInputStream：将 String 转换为 InputStream。
 - FileInputStream：用于从文件中读取信息。
 - PipedInputStream：产生用于写入相关 PipedOutputStream 的数据。实现"管道化概念"
 - SequenceInputStream：将两个或多个 InputStream 对象转换为一个 InputStream。
 - FilterInputStream：与其他配合使用。
5.OutputStream：决定了输出说要去往的目标。基本上也有上述 InputStream 类型。
6.Reader 和 Writer 提供了兼容 Unicode 与面向字符的 I/O 功能，而不是用来替代 InputStream 和 OutputStream 的。
7.InputStreamReader 可以把 InputStream 转换为 Reader。
8.设计 Reader 和 Writer 继承层次结构主要是为了国际化。老的 I/O 流继承层次结构仅支持 8 位字节流，并不能很好的处理 16 位的 Unicode 字符。
9.RandomAccessFile 适用于由大小已知的记录组成的文件，所以我们可以使用 seek() 将记录从一处移到另一处，然后读取或者修改记录。它是一个独立的
类，并非是 InputStream 或者 OutputStream 继承层次结构中的不一部分。这么做是因为 RandomAccessFile 拥有和别的 I/O 系统本质不同的行为，
因为我们可以在一个文件内向前或向后移动。
10."持久化"意味着一个对象的生命周期并不取决与程序是否正在执行，它可以生存于程序的调用之间。
11.Serializable 用于序列化，而 transient 关键字可以让你选择哪些字段不做持久话处理，transient 的意思是"不用麻烦你帮我保存或恢复数据————
我自己会处理的"。
12.Externalizable 可以用于自定义持久化。